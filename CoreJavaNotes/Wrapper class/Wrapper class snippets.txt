Wrapper class and its associated constructor
   Byte   => byte and String
   Short  => short and String
  Integer => int and String
  Long    => long and String
  **Float => float ,String and double
   Double => double and String
 **Character=> character 
 ***Boolean  => boolean and String


Snippet
=====
1.
Boolean b=new Boolean(true);
Boolean b=new Boolean(false);
Boolean b1=new Boolean(True);
Boolean b=new Boolean(False);
Boolean b=new Boolean(TRUE);


2.
 Boolean b1=new Boolean("true");
 Boolean b2=new Boolean("True");
 Boolean b3=new Boolean("false");
 Boolean b4=new Boolean("False");
 Boolean b5=new Boolean("nitin");
 Boolean b6=new Boolean("TRUE");
 System.out.println(b1);
 System.out.println(b2);
 System.out.println(b3);
 System.out.println(b4);
 System.out.println(b5);
 System.out.println(b6);

3. 
Integer i2 = new Integer(10);
System.out.println(i1); 
System.out.println(i1.equals(i2)); 


valueOf()
======
1.
Integer i=Integer.valueOf("10");
Double  d=Double.valueOf("10.5");
Boolean b=Boolean.valueOf("ineuron");
   System.out.println(i);
   System.out.println(d);
   System.out.println(b);

2.
Integer i1=Integer.valueOf("1111");
    System.out.println(i1);
Integer i2=Integer.valueOf("1111",2);
    System.out.println(i2);
Integer i3=Integer.valueOf("ten");
    System.out.println(i3);
Integer i4=Integer.valueOf("1111",37);
    System.out.println(i4);

3.
Integer i1=Integer.valueOf(10);
Double  d1=Double.valueOf(10.5);
Character c=Character.valueOf('a');
Boolean b=Boolean.valueOf(true);


Snippets
=======
Examples :
Integer i1= new Integer(10);
Integer i2= new Integer(10);
System.out.println(i1==i2);

Integer i1 = 10;
Integer i2 = 20;
System.out.println(i1==i2);

Integer i1 =Integer.valueOf(10);
Integer i2 =Integer.valueOf(10);
System.out.println(i1==i2);

Integer i1 =10;
Integer i2 =Integer.valueOf(10);
System.out.println(i1==i2);


case1::Widening vs Autoboxing
class AutoBoxingAndUnboxingDemo { 
	public static void methodOne(long l) { 
			System.out.println("widening"); 
	}	 
	public static void methodOne(Integer i) { 
			System.out.println("autoboxing"); 
	} 
	public static void main(String[] args) { 
			int x=10; 
			methodOne(x); 
	}	 
} 


case2::Widening vs var-arg method 

class AutoBoxingAndUnboxingDemo { 
			public static void methodOne(long l) { 
					System.out.println("widening"); 
			} 
			public static void methodOne(int... i) { 
					System.out.println("var-arg method"); 
			} 
			public static void main(String[] args) { 
					int x=10; 
					 methodOne(x); 
			} 
} 
 

Case 3: Autoboxing vs var-arg method :

class AutoBoxingAndUnboxingDemo { 
	public static void methodOne(Integer i) { 
			System.out.println("Autoboxing"); 
	} 
	public static void methodOne(int... i) { 
			System.out.println("var-arg method"); 
	} 
	public static void main(String[] args) { 
			int x=10; 
			methodOne(x); 
	} 
} 

Case 4: 
class AutoBoxingAndUnboxingDemo { 
	public static void methodOne(Long l) { 
		System.out.println("Long"); 
	} 
	public static void main(String[] args) { 
			int x=10; 
			methodOne(x); 
	} 
}


Case 5: 
class AutoBoxingAndUnboxingDemo { 
		public static void methodOne(Object o) { 
			System.out.println("Object"); 
		} 
		public static void main(String[] args) { 
			int x=10; 
			 methodOne(x); 
		} 
}

Which of the following declarations are valid ?
1. int i=10 ; 
2. Integer I=10 ; 
3. int i=10L ; 
4. Long l = 10L ; 
5. Long l = 10 ;  
6. long l = 10 ; 
7. Object o=10 ; 
8. double d=10 ;  
9. Double d=10 ; 
10. Number n=10; 
 









